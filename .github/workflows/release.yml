name: Create Release

on:
  workflow_run:
    workflows: ["Build Windows Executable"]
    types:
      - completed
    branches:
      - main

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Download artifacts
        id: download_artifacts
        uses: actions/github-script@v7
        with:
          script: |
            const artifacts = await github.rest.actions.listWorkflowRunArtifacts({
              owner: context.repo.owner,
              repo: context.repo.repo,
              run_id: ${{ github.event.workflow_run.id }}
            });
            
            // Download executable
            const execArtifact = artifacts.data.artifacts.find(artifact => artifact.name === "bustle-windows");
            if (execArtifact) {
              const download = await github.rest.actions.downloadArtifact({
                owner: context.repo.owner,
                repo: context.repo.repo,
                artifact_id: execArtifact.id,
                archive_format: 'zip'
              });
              const fs = require('fs');
              fs.writeFileSync('bustle-windows.zip', Buffer.from(download.data));
            } else {
              core.warning('No executable artifact found');
            }
            
            // Download installer
            const installerArtifact = artifacts.data.artifacts.find(artifact => artifact.name === "bustle-installer");
            if (installerArtifact) {
              const download = await github.rest.actions.downloadArtifact({
                owner: context.repo.owner,
                repo: context.repo.repo,
                artifact_id: installerArtifact.id,
                archive_format: 'zip'
              });
              const fs = require('fs');
              fs.writeFileSync('bustle-installer.zip', Buffer.from(download.data));
            } else {
              core.warning('No installer artifact found');
            }
            
            // Download compressed executable
            const compressedArtifact = artifacts.data.artifacts.find(artifact => artifact.name === "bustle-windows-zip");
            if (compressedArtifact) {
              const download = await github.rest.actions.downloadArtifact({
                owner: context.repo.owner,
                repo: context.repo.repo,
                artifact_id: compressedArtifact.id,
                archive_format: 'zip'
              });
              const fs = require('fs');
              fs.writeFileSync('bustle-windows-compressed.zip', Buffer.from(download.data));
            } else {
              core.warning('No compressed executable artifact found');
            }
            
            // Get workflow run info to check if it was triggered by a tag
            const workflowRun = await github.rest.actions.getWorkflowRun({
              owner: context.repo.owner,
              repo: context.repo.repo,
              run_id: ${{ github.event.workflow_run.id }}
            });
            
            // Check if the workflow was triggered by a tag
            const ref = workflowRun.data.head_branch;
            const isTag = ref && ref.startsWith('refs/tags/');
            
            core.exportVariable('IS_TAG', isTag ? 'true' : 'false');
            core.exportVariable('REF_NAME', ref);
            
            return { isTag, ref };
      
      - name: Extract artifacts
        run: |
          mkdir -p artifacts
          unzip -o bustle-windows.zip -d artifacts/ || echo "Failed to extract executable"
          unzip -o bustle-installer.zip -d artifacts/ || echo "Failed to extract installer"
          unzip -o bustle-windows-compressed.zip -d artifacts/ || echo "Failed to extract compressed executable"
          ls -la artifacts/
      
      - name: Get version info
        id: version
        run: |
          # Get package.json version
          PACKAGE_VERSION=$(node -e "console.log(require('./package.json').version || '0.0.0')")
          
          if [[ "$IS_TAG" == "true" ]]; then
            echo "is_tag=true" >> $GITHUB_OUTPUT
            echo "version=$REF_NAME" >> $GITHUB_OUTPUT
            echo "release_name=Release $REF_NAME" >> $GITHUB_OUTPUT
            echo "also_tag_as_latest=true" >> $GITHUB_OUTPUT
          else
            echo "is_tag=false" >> $GITHUB_OUTPUT
            echo "version=dev" >> $GITHUB_OUTPUT
            echo "release_name=Development Build $PACKAGE_VERSION ($(date +'%Y-%m-%d'))" >> $GITHUB_OUTPUT
            echo "also_tag_as_latest=false" >> $GITHUB_OUTPUT
          fi
      
      - name: Make release script executable
        run: chmod +x ./bin/github_release.sh
      
      - name: Create or Update Release
        run: |
          ./bin/github_release.sh \
            "${{ secrets.GITHUB_TOKEN }}" \
            "${{ github.repository_owner }}" \
            "${{ github.event.repository.name }}" \
            "${{ steps.version.outputs.is_tag }}" \
            "${{ steps.version.outputs.version }}" \
            "${{ steps.version.outputs.release_name }}" \
            "${{ steps.version.outputs.also_tag_as_latest }}" \
            "artifacts/bustle.exe" \
            "artifacts/BustleInstaller.exe" \
            "artifacts/bustle.zip"
