name: Build Windows Executable

on:
  push:
    branches: [ main ]
    tags: [ '*' ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        submodules: recursive
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
    
    - name: Install Rust toolchain
      uses: actions-rust-lang/setup-rust-toolchain@v1
      with:
        toolchain: 1.76.0
        target: x86_64-pc-windows-msvc
        components: rustfmt, clippy
        cache-workspaces: steamworks
    
    - name: Set RUSTFLAGS to allow unexpected cfgs
      shell: bash
      run: echo "RUSTFLAGS=--allow=unexpected_cfgs" >> $GITHUB_ENV
    
    - name: Install dependencies
      run: npm ci
    
    - name: Cache steamworks build
      id: cache-steamworks
      uses: actions/cache@v3
      with:
        path: |
          steamworks/dist
          steamworks/node_modules
        key: ${{ runner.os }}-steamworks-${{ hashFiles('steamworks/**/*.rs', 'steamworks/**/*.toml', 'steamworks/package.json', 'steamworks/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-steamworks-
    
    - name: Build steamworks dependency
      if: steps.cache-steamworks.outputs.cache-hit != 'true'
      working-directory: steamworks
      run: |
        npm ci
        npm run build
    
    - name: Install Inno Setup
      run: |
        choco install innosetup -y
    
    - name: Build application and installer
      shell: bash
      run: ./bin/release_win.sh
    
    - name: Create compressed zip of executable
      shell: powershell
      run: |
        Compress-Archive -Path "dist\win\bustle.exe" -DestinationPath "dist\win\bustle.zip" -CompressionLevel Optimal -Force
    
    - name: Upload executable artifact
      uses: actions/upload-artifact@v4
      with:
        name: bustle-windows
        path: dist/win/bustle.exe
        retention-days: 7
        compression-level: 0
        
    - name: Upload installer artifact
      uses: actions/upload-artifact@v4
      with:
        name: bustle-installer
        path: dist/win/BustleInstaller.exe
        retention-days: 7
        compression-level: 0
        
    - name: Upload compressed executable artifact
      uses: actions/upload-artifact@v4
      with:
        name: bustle-windows-zip
        path: dist/win/bustle.zip
        retention-days: 7
        compression-level: 0
        
    - name: Save tag information
      if: startsWith(github.ref, 'refs/tags/')
      shell: bash
      run: |
        echo "IS_TAG=true" >> $GITHUB_ENV
        echo "TAG_NAME=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
        
        # Create a tag-info.json file with proper JSON using Node.js
        node -e "
          const fs = require('fs');
          const tagName = process.env.GITHUB_REF.replace('refs/tags/', '');
          const data = { is_tag: true, tag_name: tagName };
          fs.writeFileSync('tag-info.json', JSON.stringify(data, null, 2));
          console.log('Created tag-info.json with content:');
          console.log(fs.readFileSync('tag-info.json', 'utf8'));
        "
        
    - name: Save release information
      shell: bash
      run: |
        # Determine if this is a tag build
        IS_TAG="false"
        TAG_NAME="none"
        RELEASE_NAME="Development Build"
        ALSO_TAG_AS_LATEST="false"
        
        if [[ "$GITHUB_REF" == refs/tags/* ]]; then
          IS_TAG="true"
          TAG_NAME="${GITHUB_REF#refs/tags/}"
          RELEASE_NAME="Version ${TAG_NAME}"
          ALSO_TAG_AS_LATEST="true"
        fi
        
        # Create a release-info.json file with proper JSON using Node.js
        node -e "
          const fs = require('fs');
          const data = { 
            is_tag: ${IS_TAG}, 
            tag_name: '${TAG_NAME}',
            release_name: '${RELEASE_NAME}',
            also_tag_as_latest: ${ALSO_TAG_AS_LATEST}
          };
          fs.writeFileSync('release-info.json', JSON.stringify(data, null, 2));
          console.log('Created release-info.json with content:');
          console.log(fs.readFileSync('release-info.json', 'utf8'));
        "
        
    - name: Upload release information
      uses: actions/upload-artifact@v4
      with:
        name: release-info
        path: release-info.json
        retention-days: 7
        
    - name: Upload tag information
      if: startsWith(github.ref, 'refs/tags/')
      uses: actions/upload-artifact@v4
      with:
        name: tag-info
        path: tag-info.json
        retention-days: 7