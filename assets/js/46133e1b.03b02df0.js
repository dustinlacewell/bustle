"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[472],{8453:(e,o,n)=>{n.d(o,{R:()=>i,x:()=>d});var r=n(6540);const t={},s=r.createContext(t);function i(e){const o=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(o):{...o,...e}}),[o,e])}function d(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),r.createElement(s.Provider,{value:o},e.children)}},9725:(e,o,n)=>{n.r(o),n.d(o,{assets:()=>l,contentTitle:()=>d,default:()=>u,frontMatter:()=>i,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"projects","title":"Bustle Projects","description":"Bustle works best when your mod project has a particular structure:","source":"@site/docs/projects.md","sourceDirName":".","slug":"/projects","permalink":"/docs/projects","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/projects.md","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"sidebar_position":4},"sidebar":"tutorialSidebar","previous":{"title":"Running Bustle","permalink":"/docs/running"},"next":{"title":"Releasing Your Mod","permalink":"/docs/releasing"}}');var t=n(4848),s=n(8453);const i={sidebar_position:4},d="Bustle Projects",l={},c=[{value:"<code>workshop.json</code>",id:"workshopjson",level:2},{value:"Linking Your Mod",id:"linking-your-mod",level:2},{value:"Building a Development Zip",id:"building-a-development-zip",level:2}];function a(e){const o={blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(o.header,{children:(0,t.jsx)(o.h1,{id:"bustle-projects",children:"Bustle Projects"})}),"\n",(0,t.jsx)(o.p,{children:"Bustle works best when your mod project has a particular structure:"}),"\n",(0,t.jsx)(o.pre,{children:(0,t.jsx)(o.code,{className:"language-bash",children:"<MyModProject>/\n\u251c\u2500\u2500 mod/                # Your -actual- mod files\n\u2502   \u251c\u2500\u2500 _metadata\n\u2502   \u251c\u2500\u2500 ModMain.gd\n\u2502   \u2514\u2500\u2500 CoolClass.gd\n\u251c\u2500\u2500 bustle.json         # Your Bustle config\n\u251c\u2500\u2500 workshop.json       # Your Steam Workshop config\n\u251c\u2500\u2500 preview.png         # Workshop preview image\n\u2514\u2500\u2500 change-notes.txt    # Change notes for upcoming release\n"})}),"\n",(0,t.jsx)(o.p,{children:"You can keep your mod project wherever you like, but one option is the following:"}),"\n",(0,t.jsx)(o.pre,{children:(0,t.jsx)(o.code,{className:"language-bash",children:"steamapps/\n\u2514\u2500\u2500 common/\n    \u2514\u2500\u2500 YourOnlyMoveIsHUSTLE/                   # Your retail YOMI Hustle folder\n        \u2514\u2500\u2500 mods/                               # Your reail mods folder\n        \u2502   \u2514\u2500\u2500 MyMod.zip\n        \u2514\u2500\u2500 moddev/                             # All your yomi modding stuff\n            \u251c\u2500\u2500 MyModProject/                   # Your mod project\n            \u2502   \u251c\u2500\u2500 README.md\n            \u2502   \u251c\u2500\u2500 bustle.json                 # Your Bustle config\n            \u2502   \u251c\u2500\u2500 workshop.json               # Your Steam Workshop config\n            \u2502   \u251c\u2500\u2500 preview.png                 # Workshop preview image\n            \u2502   \u251c\u2500\u2500 change-notes.txt            # Change notes for upcoming release\n            \u2502   \u2514\u2500\u2500 mod                         # Your actual mod files\n            \u2502       \u251c\u2500\u2500 _metadata\n            \u2502       \u251c\u2500\u2500 ModMain.gd\n            \u2502       \u2514\u2500\u2500 CoolClass.gd\n            \u251c\u2500\u2500 windows-351-editor-64bit.exe    # Godot editor binary\n            \u2514\u2500\u2500 GodotDecomp/                    # Decompiled Godot project\n            \u2502   \u251c\u2500\u2500 MyMod/                      # Symlink to your mod project\n            \u2502   \u2514\u2500\u2500 ...\n            \u2514\u2500\u2500 mods/\n                \u2514\u2500\u2500 MyMod.dev.zip               # Development zip\n"})}),"\n",(0,t.jsxs)(o.p,{children:["This is the structure I use, it makes it very easy to configure my ",(0,t.jsx)(o.code,{children:"bustle.json"})," file."]}),"\n",(0,t.jsx)(o.h1,{id:"bustlejson",children:(0,t.jsx)(o.code,{children:"bustle.json"})}),"\n",(0,t.jsxs)(o.p,{children:["The ",(0,t.jsx)(o.code,{children:"bustle.json"})," file is a JSON file that contains all the information Bustle needs to know about your mod."]}),"\n",(0,t.jsxs)(o.blockquote,{children:["\n",(0,t.jsxs)(o.p,{children:[(0,t.jsx)(o.strong,{children:"Note:"})," All paths in ",(0,t.jsx)(o.code,{children:"bustle.json"})," are relative to the ",(0,t.jsx)(o.code,{children:"bustle.json"})," file."]}),"\n"]}),"\n",(0,t.jsxs)(o.p,{children:["Here's an example ",(0,t.jsx)(o.code,{children:"bustle.json"})," file for the example structure above:"]}),"\n",(0,t.jsx)(o.pre,{children:(0,t.jsx)(o.code,{className:"language-json",children:'{\n    // These are REQUIRED:\n    "modName": "MyMod",            // The name of your mod\n    "modDir": "mod",               // Directory containing your mod files\n    "godotDir": "../GodotDecomp",  // Your decompiled yomi Godot project\n    "buildDir": "build",           // Temp directory to perform the build in\n    "putDevIn": "../mods",         // Your Godot editor mods/ directory\n    "putReleaseIn": "../../mods",  // Your Steam yomi mods/ directory\n\n    // These are optional:\n    "strip": true,                 // Whether to strip your script class names\n    "gather": ".import",           // Whether/where to gather resource imports\n    "cleanup": true,               // Whether remove build directory after build\n    "optimized": true,             // Whether to omit resource sources\n    "include": ["*.import"],       // Import resources to include in optimized builds\n    "dryRun": false                // Only pretend to do things\n}\n'})}),"\n",(0,t.jsx)(o.h2,{id:"workshopjson",children:(0,t.jsx)(o.code,{children:"workshop.json"})}),"\n",(0,t.jsxs)(o.p,{children:["The ",(0,t.jsx)(o.code,{children:"workshop.json"})," file is a JSON file that contains all the information Steam Workshop needs to know about your mod."]}),"\n",(0,t.jsxs)(o.p,{children:["Here's an example ",(0,t.jsx)(o.code,{children:"workshop.json"})," file for the example structure above:"]}),"\n",(0,t.jsx)(o.pre,{children:(0,t.jsx)(o.code,{className:"language-json",children:'{\n    "id": "1234567890",                     // Your mod\'s Steam Workshop ID\n    "title": "MyMod",                       // Your mod\'s title\n    "preview": "preview.png",               // Your mod\'s preview image\n    "description": "My mod description.",   // Your mod\'s description\n    "visibility": "public",                 // Your mod\'s visibility\n    "tags": [                               // Your mod\'s tags\n        "Character"\n    ]\n}\n'})}),"\n",(0,t.jsx)(o.p,{children:"Now that Bustle knows all about your mod, it's ready to go!"}),"\n",(0,t.jsx)(o.h2,{id:"linking-your-mod",children:"Linking Your Mod"}),"\n",(0,t.jsxs)(o.p,{children:["With Bustle, your mod doesn't have to literally be inside the Godot project. You can keep it wherever you like. Using the ",(0,t.jsx)(o.code,{children:"bustle link"})," command, you can create a symlink from the Godot project to your mod directory. This allows you to:"]}),"\n",(0,t.jsxs)(o.ul,{children:["\n",(0,t.jsx)(o.li,{children:"Keep your projects seperate from the Godot project."}),"\n",(0,t.jsx)(o.li,{children:"Seperate your README and other files from your actual mod files by keeping your mod files in a subdirectory."}),"\n"]}),"\n",(0,t.jsx)(o.pre,{children:(0,t.jsx)(o.code,{children:"$ bustle link\n[ACTION] Creating symlink: ../GodotDecomp/MyMod -> mod\n"})}),"\n",(0,t.jsx)(o.h2,{id:"building-a-development-zip",children:"Building a Development Zip"}),"\n",(0,t.jsxs)(o.p,{children:["Even though your mod is linked to the Godot project, ModLoader will only recognize your mod if it can find your ",(0,t.jsx)(o.code,{children:"ModMain.gd"})," and ",(0,t.jsx)(o.code,{children:"_metadata"})," files inside a zip in the ",(0,t.jsx)(o.code,{children:"mods/"})," folder. So you'll need to build a development zip."]}),"\n",(0,t.jsx)(o.pre,{children:(0,t.jsx)(o.code,{children:"$ bustle dev\n[ACTION] Ensuring directory exists: build\\MyMod\n[ACTION] Copying mod\\ModMain.gd to build\\MyMod\\ModMain.gd\n[ACTION] Copying metadata from mod\\_metadata to build\\MyMod\\_metadata\n[ACTION] Creating zip archive: ..\\mods\\MyMod.zip from build\n[ACTION] Adding folder: MyMod\n[ACTION] Writing zip file: ..\\mods\\MyMod.zip\n"})}),"\n",(0,t.jsx)(o.p,{children:"Congratulations! You're ready to go!"}),"\n",(0,t.jsx)(o.p,{children:"Godot should now recognize your mod and ModLoader should load it when you run the game."})]})}function u(e={}){const{wrapper:o}={...(0,s.R)(),...e.components};return o?(0,t.jsx)(o,{...e,children:(0,t.jsx)(a,{...e})}):a(e)}}}]);